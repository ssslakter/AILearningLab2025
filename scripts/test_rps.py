import asyncio
import random
import matplotlib.pyplot as plt
import aiohttp
import time
from statistics import mean
import argparse

# Server configuration
SERVER_URL = "http://localhost:5002/api"  # Replace with your server's URL
ENDPOINT = "/classify"  # Replace with the endpoint you want to test
CONCURRENT_REQUESTS = [10, 50, 100, 200, 500, 750, 1000, 1250]  # Varying concurrency levels

request_text = {
    'short': ['Буду участвовать как игрок',
              '<p class="st0">Очень красивые фото!</p>',
              '<p>а чё делаем с теми, кто уже отпраздновал в январе и феврале?</p>'
              ],
    'med': ['Вообще, современные веб-части должны иметь мобильные версии, чтобы по этому поводу не считал Тема Лебедев. Но наша функциональность на sysdate не такая красивая, чтобы уже делать ее веб-часть. Думаю, что в недалеком будущем начнем, ну или нам нужен еще разработчик ;)',
            '<p>уже думали на эту тему - но тут надо делать так, чтобы фото все же было узнаваемо. возможно, следует давать возможность загружать несколько фото в дополнение к официальному.</p>',
            '<p>Паша, ты какнибудь с правами полегче настрой.... Тему не создать, опрос не создать... Все только через тебя?</p>'],
    'long': [
        '''
    Спасибо ) </p><p class="st0">- Участие в регате: в зависимости от регаты и лодки. В моем случае яхта входит в ассоциацию яхт класса Л6, там еще сохранился некоторый оплот коммунизма =) Экипажи сами содержат лодки, устраивают субботники в яхт-клубе и т.д. Поэтому и взносы там небольшие. Есть взнос в судовую кассу (на ремонт, еду между гонками, шашлыки и т.д.) порядка 1 - 1,5 тыс в месяц. Единовременный взнос на гонку тоже примерно в этих лимитах. Но нужно еще включать затраты на билеты до места старта (или на бенз), на еду, шашлыки и другие маленькие радости жизни )</p><p class="st0">Есть чисто коммерческие истории: можно купить сертификат на практику на Santer'ах на сезон за 35 тыс. и учебно-тренировочно гоняться с такими же лодками хоть каждый день. Никаких судовых касс там нет. </p><p class="st0">Еще можно весной прийти в яхт-клуб на Петровской косе и поговорить с экипажами лодок. Там наверняка будут места и ребята предложат войти в экипаж на добровольных началах (или за чай с печеньками)</p><p class="st0">- Выйти покататься - в прошлом сезоне можно было договориться за примерно 12 - 15 тыс за лодку (8 человек) - арендовать полностью или подсесть в сборный экипаж на выбор. Соответствующие группы можно найти в ВК. Уже на борту по договоренности с Кэпом можно попроситься поработать со шкотами (поуправлять парусами). Это индивидуально, но обычно не отказывают, если условия позволяют.</p><p class="st0">- Походы - надо искать. Приглашения тоже мелькают в яхтенных группах в ВК, но надо понимать, что ты оказываешься на несколько дней в довольно тесном пространстве с одними и теми же людьми. И хорошо, если люди тебе импонируют. Так что тут осторожней ;) Приглашения на походы обычно прилетают, когда уже крутишься в яхтенной теме и тебя более-менее знают. </p><p class="st0">- Из доступных мест у нас осталось не так много. Яхт-клубы в Петербурге с завидным упорством закрывают. Из последних оплотов нормального (не элитного) яхтинга по сути только Центральный Речной Яхт Клуб Профсоюзов на Петровской косе. Там и сосредоточены и яхтенные школы и покатушки и лодки ассоциации класса Л6. Можно либо придти туда ножками и поговорить, либо поискать приглашалки на дни открытых дверей (сейчас самое время для них)<br></p><p class="st0"><br></p><p class="st0">Основная мысль про деньги - все не так дорого как кажется, особенно если готов потратить какое-то время и силы. Всякие лицензии по крайней мере на начальных этапах точно не нужны. Если попробовать влиться в сообщество (а оно довольно гостеприимное), то по деньгам будет самый минимум. Если нет - можно пойти по коммерческой истории и купить какой-нибудь (а-ля "подарочный") сертификат, абонемент, либо пойти на курсы с практической частью
    ''',
        '''
    Многих ознакомившихся со статьей заинтересовал вопрос:&nbsp;</p><p class="st0">«Зачем расширять присутствие в перспективном аккаунте МТС в текущих реалиях (неотлаженные бизнес-процессы и значительная ограниченность в ресурсах, выделяемых на сегмент Others) и какие риски это в себе несёт?». </p><p class="st0"><br></p><p class="st0">Давайте будет объективными – вариантов решений в ИТ-проектах обычно больше единицы. То есть всегда есть возможности сотрудничества и кооперации, которые могут быть использованы для достижения целей, таких как победа в тендере, или запуск реальной услуги у клиента оператора связи. </p><p class="st0"><br></p><p class="st0">Вариантов навскидку, как минимум «с пяток» набирается:</p><p class="st0 level1">1.Доработать существующий продукт</p><p class="st0 level1">2.Написать требуемый продукт «с нуля»</p><p class="st0 level1">3.Привлечь аутсорсинговую компанию, либо приобрести готовую стартап-команду</p><p class="st0 level1">4.Взять Open Source платформу и предынтегрировать с существующим продуктом</p><p class="st0 level1">5.Идти на конкурс совместно с партнером (в т.ч. и зарубежным – от них продукт, от нас локальная поддержка и эксплуатация)</p><p class="st0"><br></p><p class="st0">Считаю, что все перечисленные варианты приемлемые. Тем не менее, более реалистичными сценариями являются четвертый и пятый. </p><p class="st0"><br></p><p class="st0">По моему мнению, (4) и (5) позволят значительно сократить сроки выработки итового решения плюс открываются возможности продажи на открытом рынке. В том числе и самым «любимым клиентам» - МегаФону / МегаЛабсу и Киевстару. В первом случае, потому что МегаФон «догоняет» лидера рынка МТС, а во втором – рынок Украины отстает от рынка России.
    ''',
        '''
    Планируются какие-либо просветительские мероприятия? Расширение сортировки отходов в офисе? </p><p class="st0">Хотелось бы освещения темы представителями экосообществ. Во Владивостоке могу порекомендовать организацию, ребята занимаются вопросами экологии в нашем крае, в том числе проводят лекции по экологии и обращению с отходами для компаний и школ. Местные представители будут полезнее, т.к. ситуация с сортировкой/переработкой в каждом регионе разная, из-за отсутствия централизованной программы в стране. </p><p class="st0">Было забавно когда нам поставили урны для сортировки пластик/бумага/(что-то еще), в "пластик" летели фракции которые в нашем регионе не перерабатывались на тот момент, в "бумагу" - использованные салфетки и "бумажные"" стаканчики (спойлер - они не бумажные). Ходили слухи что работники клининга эту сортировку скидывали в общий пакет с мусором)
    '''
    ]
}


async def send_request(session, length: str = 'short'):
    try:
        async with session.post(SERVER_URL + ENDPOINT, json={'text': random.choice(request_text[length])}) as response:
            return response.status == 200
    except Exception: return False


async def measure_rps(concurrent_requests):
    async with aiohttp.ClientSession() as session:
        start_time = time.perf_counter()
        successful_responses = await asyncio.gather(
            *[send_request(session) for _ in range(concurrent_requests)]
        )
        duration = time.perf_counter() - start_time

        success_count = sum(successful_responses)
        return success_count / duration if duration > 0 else 0, duration, success_count, len(successful_responses) - success_count


async def main():
    parser = argparse.ArgumentParser(description="Performance Test for Async Server")
    parser.add_argument("length", choices=['short', 'med', 'long'], help="Test length: short, med, or long")
    args = parser.parse_args()

    if args.length:
        print(f"Test length parameter received: {args.length}")

    print("Performance Test for Async Server")
    print(f"Testing {SERVER_URL + ENDPOINT}\n")

    rps_results = []
    for concurrency in CONCURRENT_REQUESTS:
        print(f"Testing with {concurrency} concurrent requests...")
        rps_values = [await measure_rps(concurrency) for _ in range(3)]
        avg_rps = mean(rps[0] for rps in rps_values)
        print(f"Average RPS for {concurrency} concurrent requests: {avg_rps:.2f}\n")
        rps_results.append(avg_rps)

    # Plot results
    plt.plot(CONCURRENT_REQUESTS, rps_results, marker='o')
    plt.title(f"Server Performance '{args.length}': RPS vs Concurrent Requests")
    plt.xlabel("Concurrent Requests")
    plt.ylabel("Requests Per Second (RPS)")
    plt.grid(True)
    plt.savefig(f"server_performance_{args.length}.png")
    print(f"Performance graph saved to 'server_performance_{args.length}.png'")

if __name__ == "__main__":
    asyncio.run(main())
